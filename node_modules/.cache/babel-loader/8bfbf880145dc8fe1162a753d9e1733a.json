{"remainingRequest":"/home/jaiden/Code/JaID-Vue/node_modules/babel-loader/lib/index.js!/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaiden/Code/JaID-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaiden/Code/JaID-Vue/src/components/VueItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaiden/Code/JaID-Vue/src/components/VueItem.vue","mtime":1551696168339},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1539307301811},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/babel-loader/lib/index.js","mtime":1541744734350},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1539307301811},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/vue-loader/lib/index.js","mtime":1541744744501}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport jQuery from \"jquery\";\nimport Slick from \"vue-slick\";\nexport default {\n  name: \"VueItem\",\n  components: {\n    Slick: Slick\n  },\n  mounted: function mounted() {\n    $(\".carousel-container\").slick({\n      // setting-name: setting-value\n      arrows: true,\n      dots: true,\n      cssEase: \"ease-out\",\n      speed: 200,\n      useTransform: true\n    }); // Button Selecting:\n    // When .button is clicked,\n\n    $(\".button\").click(function () {\n      // Find the other .buttons within this parent and remove .selected\n      $(this).parent().find(\".button\").not(this).removeClass(\"selected\"); // If the button clicked is the cart button...\n\n      if ($(this).hasClass(\"add-to-cart-button\")) {\n        // If the item is not in cart...\n        if (!$(this).hasClass(\"in-cart\")) {\n          // (Add to cart);\n          // Change button text to show it's in the cart\n          $(this).find(\"h2\").html(\"Remove from Cart\"); // Give class 'in-cart' to set status of item\n\n          $(this).addClass(\"in-cart\"); // otherwise...\n        } else if ($(this).hasClass(\"in-cart\")) {\n          // (Remove from cart);\n          // Change button text to show it's not in the cart\n          $(this).find(\"h2\").html(\"Add to Cart\"); // Remove 'in-cart' class to set status of item\n\n          $(this).removeClass(\"in-cart\");\n        } // Otherwise, if it's a color button...\n\n      } else if ($(this).parent().hasClass(\"colors\")) {\n        // Get the button's custom data-pic attribute\n        var pic = $(this).data(\"pic\"); // Change the main image source to the one from data-pic\n\n        $(\"#main-image\").attr(\"src\", pic);\n      } // Toggle .active for the button clicked\n\n\n      $(this).toggleClass(\"selected\");\n    }); // Quantity Counter\n\n    jQuery(document).ready(function () {\n      // This button will increment the value\n      $(\".qtyplus\").click(function (e) {\n        // Stop acting like a button\n        e.preventDefault(); // Get the field name\n\n        var fieldName = $(this).attr(\"field\"); // Get its current value\n\n        var currentVal = parseInt($(\"input[name=\" + fieldName + \"]\").val()); // If is not undefined\n\n        if (!isNaN(currentVal)) {\n          // Increment\n          $(\"input[name=\" + fieldName + \"]\").val(currentVal + 1);\n        } else {\n          // Otherwise put a 0 there\n          $(\"input[name=\" + fieldName + \"]\").val(0);\n        }\n      }); // This button will decrement the value till 0\n\n      $(\".qtyminus\").click(function (e) {\n        // Stop acting like a button\n        e.preventDefault(); // Get the field name\n\n        var fieldName = $(this).attr(\"field\"); // Get its current value\n\n        var currentVal = parseInt($(\"input[name=\" + fieldName + \"]\").val()); // If it isn't undefined or its greater than 0\n\n        if (!isNaN(currentVal) && currentVal > 0) {\n          // Decrement one\n          $(\"input[name=\" + fieldName + \"]\").val(currentVal - 1);\n        } else {\n          // Otherwise put a 0 there\n          $(\"input[name=\" + fieldName + \"]\").val(0);\n        }\n      }); // Fill the cart menu with carted items\n\n      function fillCart() {\n        $(\".cart-entry\").remove(); // Locate cart side menu for adding divs (carted items)\n\n        var cartDiv = $(\"#cart\"); // Get cart contents form localStorage, convert to object\n\n        var cart = localStorage.getItem(\"Cart\");\n        var cartObject = JSON.parse(cart); // For carted item...\n\n        for (var i = 0; i < cartObject.length; i++) {\n          // Create variable out of carted item\n          var entry = cartObject[i]; // For detail in carted item... (title, price, etc)\n\n          var _loop = function _loop() {\n            //  Create variable out of detail\n            var detail = entry[j]; // Pull cart details for injecting into HTML\n\n            var entryTitle = detail[\"Title\"];\n            var entryPrice = detail[\"Price\"];\n            var entryImage = detail[\"Image\"];\n            var entryAmount = detail[\"Amount\"];\n\n            function createCartEntry() {\n              // create overall container div for a cart entry\n              var container = document.createElement(\"div\");\n              container.classList.add(\"option\", \"cart-entry\"); // PRIMARY CHILD DIV | shows image and title of item\n\n              var faceplate = document.createElement(\"div\");\n              faceplate.classList.add(\"faceplate\"); // create + prepend image element\n\n              var image = document.createElement(\"img\");\n              $(image).attr('src', entryImage);\n              faceplate.prepend(image); // create + append title element\n\n              var titleH3 = document.createElement(\"h3\");\n              var titleContent = document.createTextNode(entryTitle);\n              titleH3.appendChild(titleContent);\n              titleH3.classList.add(\"item-title\");\n              faceplate.append(titleH3); // create + append dropdown arrow\n\n              var arrow = document.createElement(\"i\");\n              arrow.classList.add(\"fas\", \"fa-caret-down\");\n              faceplate.append(arrow); // DROPDOWN CONTAINER\n              // create droptions-container div, append to container\n\n              var droptionsContainer = document.createElement(\"div\");\n              droptionsContainer.classList.add(\"droptions-container\");\n              container.append(droptionsContainer); // DROPDOWN CHILDREN | shows item info (price, quantity), link to item, button to remove item\n              // create option/info divs: price, quantity, link to item, and remove button\n\n              var outerPriceDiv = document.createElement(\"div\");\n              var outerAmountDiv = document.createElement(\"div\");\n              var outerRemoveDiv = document.createElement(\"div\"); // add option class to each of the 4 divs created above\n\n              outerPriceDiv.classList.add(\"option\");\n              outerAmountDiv.classList.add(\"option\");\n              outerRemoveDiv.classList.add(\"option\"); // append each of the 4 divs to the droptions-container div\n\n              droptionsContainer.append(outerPriceDiv);\n              droptionsContainer.append(outerAmountDiv);\n              droptionsContainer.append(outerRemoveDiv); // DROPDOWN CHILDREN CONTENTS\n              // create div for showing pricing\n\n              var innerPriceDiv = document.createElement(\"div\");\n              innerPriceDiv.classList.add(\"faceplate\", \"noclick\");\n              outerPriceDiv.appendChild(innerPriceDiv); // create price label\n\n              var priceIndicator = document.createElement(\"h3\");\n              var priceIndicatorContent = document.createTextNode(\"Price\");\n              priceIndicator.appendChild(priceIndicatorContent);\n              innerPriceDiv.prepend(priceIndicator); // create h3 with actual price value\n\n              var priceValue = document.createElement(\"h3\");\n              var priceValueContent = document.createTextNode(entryPrice);\n              priceValue.appendChild(priceValueContent);\n              innerPriceDiv.append(priceValue); // create div for showing quantity in cart\n\n              var innerAmountDiv = document.createElement(\"div\");\n              innerAmountDiv.classList.add(\"faceplate\", \"noclick\");\n              outerAmountDiv.appendChild(innerAmountDiv); // create quantity label\n\n              var amountIndicator = document.createElement(\"h3\");\n              var amountIndicatorContent = document.createTextNode(\"Quantity\");\n              amountIndicator.appendChild(amountIndicatorContent);\n              innerAmountDiv.prepend(amountIndicator); // create h3 with actual price value\n\n              var amountValue = document.createElement(\"h3\");\n              var amountValueContent = document.createTextNode(entryAmount);\n              amountValue.appendChild(amountValueContent);\n              innerAmountDiv.append(amountValue); // create div for removing item\n\n              var innerRemoveDiv = document.createElement(\"div\");\n              innerRemoveDiv.classList.add(\"faceplate\", \"red\");\n              outerRemoveDiv.appendChild(innerRemoveDiv); // create removal \"button\"\n\n              var itemRemove = document.createElement(\"h3\");\n              var itemRemoveContent = document.createTextNode(\"Remove\");\n              itemRemove.appendChild(itemRemoveContent);\n              innerRemoveDiv.prepend(itemRemove);\n              var itemRemoveIcon = document.createElement(\"i\");\n              itemRemoveIcon.classList.add(\"fas\", \"fa-times\");\n              innerRemoveDiv.append(itemRemoveIcon); // Put the faceplate containing the image, text and arrow into container\n\n              container.prepend(faceplate); // Put the container into the cart div for displaying on page\n\n              cartDiv.append(container);\n              $(container).click(function () {\n                if ($(this).children('div.droptions-container').length != 0) {\n                  // find droptions-container child of option\n                  var slider = $(this).children(\".droptions-container\"); // give display: visible to slider, done with sliding animation\n\n                  slider.slideToggle(200, function () {\n                    slider.toggleClass(\"expanded\");\n                  }); // if it is already open, give white background on click (once closed)\n\n                  if (slider.hasClass(\"expanded\")) {\n                    this.style.backgroundColor = \"#ffffff\"; // otherwise give it a grey background\n                  } else {\n                    this.style.backgroundColor = \"#e8e8e8\";\n                  }\n                } else {\n                  return;\n                }\n              });\n              $(\".option .red\").click(function () {\n                var cartItemTitle = $(this).parent().parent().siblings(\".faceplate\").children(\"h3\").text(); // Get cart contents form localStorage, convert to object\n\n                var cart = localStorage.getItem(\"Cart\");\n                var cartObject = JSON.parse(cart);\n\n                for (var product = 0; product < cartObject.length; product++) {\n                  var individualItem = cartObject[product];\n                  var itemIndex = cartObject.indexOf(individualItem);\n                  console.log(itemIndex);\n\n                  for (var feature = 0; feature < individualItem.length; feature++) {\n                    var _detail = individualItem[feature];\n                    var title = _detail[\"Title\"];\n\n                    if (title === cartItemTitle) {\n                      cartObject.splice(itemIndex, 1);\n                      var cartString = JSON.stringify(cartObject);\n                      localStorage.setItem(\"Cart\", cartString);\n                      fillCart();\n                    }\n                  }\n                }\n              });\n            }\n\n            createCartEntry();\n          };\n\n          for (var j = 0; j < entry.length; j++) {\n            _loop();\n          }\n        }\n      } // Add to cart (using Web Storage API)\n\n\n      $(\".add-to-cart-button\").click(function () {\n        function getQuantityValue() {\n          return $(document).find(\".qty\").val();\n        }\n\n        ; // Get relevant item data\n\n        var itemTitle = $(this).closest(\".panel\").data(\"title\");\n        var itemPrice = $(this).closest(\".panel\").data(\"price\");\n        var itemImage = $(this).closest(\".panel\").data(\"image\");\n        var itemQuantity = getQuantityValue(); // Create Object out of item data\n\n        var cartEntry = [{\n          \"Title\": itemTitle,\n          \"Price\": itemPrice,\n          \"Image\": itemImage,\n          \"Amount\": itemQuantity\n        }]; // Fetch cart from localStorage, convert to object\n\n        var cart = localStorage.getItem(\"Cart\");\n        var cartObject = JSON.parse(cart);\n        cartObject.push(cartEntry); // Convert cart back to string & send back to localStorage\n\n        var newCart = JSON.stringify(cartObject);\n        localStorage.setItem(\"Cart\", newCart);\n        fillCart();\n      });\n    });\n  }\n};",{"version":3,"sources":["VueItem.vue"],"names":[],"mappings":"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","sourcesContent":["// To do\n// \n// Change more than just 1 image when color is chosen\n// Allow image changes when more than 1 image is held in the selected color\n\n<template>\n  <div id=\"thing\">\n    <div v-for=\"category in this.$store.state.catelogue.categories\" v-if=\"category.name === $route.params.categoryName\" :key=\"category\">\n      <div v-for=\"item in category.items\" v-if=\"item.title === $route.params.itemTitle\" :key=\"item.title\">\n\n        <div class=\"carousel-wrapper\">\n\n          <div class=\"carousel-container\">\n            <div class=\"image-container\">\n              <img :src=\"item.mainImage\" id=\"main-image\"/>\n            </div>\n\n            <div v-for=\"image in item.images\" v-if=\"item.title === $route.params.itemTitle\" :key=\"image\" class=\"image-container\">\n              <img :src=\"image\"/>\n            </div>\n          </div>\n\n          <div class=\"panel-container\">\n            <div class=\"panel\"\n                  :data-title=\"item.title\"\n                  :data-price=\"item.price\"\n                  :data-image=\"item.mainImage\">\n              <h1 class=\"product-name\">{{ item.title }}</h1>\n              <h3 class=\"product-price\">{{ item.price }}</h3>\n\n              <div v-if=\"item.colors.length > 0\" class=\"colors\">\n                <template v-for=\"color in item.colors\">\n                  <button v-for=\"(key, value) in color\" class=\"button\" :data-pic=\"key\" :key=\"key\">\n                    <h2>{{ value }}</h2>\n                  </button>\n                </template>\n              </div>\n              <div v-else=\"\" class=\"colors\">\n                <h3>There are no color options for this item. </h3>\n              </div>\n\n              <div v-if=\"item.sizes.length > 0\" class=\"sizes\">\n                <template v-for=\"size in item.sizes\">\n                  <button class=\"button\" :key=\"size\">\n                    <h2>{{ size }}</h2>\n                  </button>\n                </template>\n              </div>\n              <div v-else=\"\" class=\"sizes\">\n                <h3>There are no size options for this item. </h3>\n              </div>\n\n              <form class=\"quantity\" id=\"counter-form\" action=\"#\" method=\"POST\">\n                <button class=\"qty-button qtyminus\" field=\"quantity\">-</button>\n                <input class=\"qty\" tpye=\"number\" name=\"quantity\" value=\"1\"/>\n                <button class=\"qty-button qtyplus\" field=\"quantity\">+</button>\n              </form>\n              <div class=\"add-to-cart-container\">\n                <button class=\"button add-to-cart-button\"> \n                  <h2>Add to Cart</h2>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"description-wrapper\">\n          <div class=\"description-header\">\n            <h1>Time to walk on clouds. </h1>\n          </div>\n          <div class=\"description-body\">\n            <p>{{ item.description }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport jQuery from \"jquery\";\nimport Slick from \"vue-slick\";\n\nexport default {\n\n    name: \"VueItem\",\n\n    components: { Slick },\n\n    mounted: function() {\n\n        $(\".carousel-container\").slick({\n            // setting-name: setting-value\n            arrows: true,\n            dots: true,\n            cssEase: \"ease-out\",\n            speed: 200,\n            useTransform: true,\n        });\n\n        // Button Selecting:\n\n        // When .button is clicked,\n        $(\".button\").click(function () {\n\n            // Find the other .buttons within this parent and remove .selected\n            $(this)\n                .parent()\n                .find(\".button\")\n                .not(this)\n                .removeClass(\"selected\");\n\n            // If the button clicked is the cart button...\n            if ($(this).hasClass(\"add-to-cart-button\")) {\n\n                // If the item is not in cart...\n                if (!$(this).hasClass(\"in-cart\")) {\n\n                    // (Add to cart);\n\n                    // Change button text to show it's in the cart\n                    $(this)\n                        .find(\"h2\")\n                        .html(\"Remove from Cart\");\n\n                    // Give class 'in-cart' to set status of item\n                    $(this).addClass(\"in-cart\");\n\n                // otherwise...\n                } else if ($(this).hasClass(\"in-cart\")) {\n\n                    // (Remove from cart);\n\n                    // Change button text to show it's not in the cart\n                    $(this)\n                        .find(\"h2\")\n                        .html(\"Add to Cart\");\n\n                    // Remove 'in-cart' class to set status of item\n                    $(this).removeClass(\"in-cart\");\n                }\n\n            // Otherwise, if it's a color button...\n            } else if ($(this).parent().hasClass(\"colors\")) {\n\n                // Get the button's custom data-pic attribute\n                let pic = $(this).data(\"pic\");\n\n                // Change the main image source to the one from data-pic\n                $(\"#main-image\").attr(\"src\", pic);\n            }\n\n              // Toggle .active for the button clicked\n              $(this).toggleClass(\"selected\");\n          });\n\n          // Quantity Counter\n          jQuery(document).ready(function () {\n\n            // This button will increment the value\n            $(\".qtyplus\").click(function (e) {\n                // Stop acting like a button\n                e.preventDefault();\n\n                // Get the field name\n                let fieldName = $(this).attr(\"field\");\n\n                // Get its current value\n                var currentVal = parseInt($(\"input[name=\" + fieldName + \"]\").val());\n\n                // If is not undefined\n                if (!isNaN(currentVal)) {\n                    // Increment\n                    $(\"input[name=\" + fieldName + \"]\").val(currentVal + 1);\n\n                } else {\n\n                    // Otherwise put a 0 there\n                    $(\"input[name=\" + fieldName + \"]\").val(0);\n                }\n            });\n\n            // This button will decrement the value till 0\n            $(\".qtyminus\").click(function (e) {\n\n                // Stop acting like a button\n                e.preventDefault();\n\n                // Get the field name\n                let fieldName = $(this).attr(\"field\");\n\n                // Get its current value\n                var currentVal = parseInt($(\"input[name=\" + fieldName + \"]\").val());\n\n                // If it isn't undefined or its greater than 0\n                if (!isNaN(currentVal) && currentVal > 0) {\n\n                    // Decrement one\n                    $(\"input[name=\" + fieldName + \"]\").val(currentVal - 1);\n                } else {\n\n                    // Otherwise put a 0 there\n                    $(\"input[name=\" + fieldName + \"]\").val(0);\n                }\n            });\n\n            // Fill the cart menu with carted items\n            function fillCart() {\n\n                $(\".cart-entry\").remove();\n\n                // Locate cart side menu for adding divs (carted items)\n                let cartDiv = $(\"#cart\")\n\n                // Get cart contents form localStorage, convert to object\n                let cart = localStorage.getItem(\"Cart\")\n                let cartObject = JSON.parse(cart)\n\n                // For carted item...\n                for (var i = 0; i < cartObject.length; i++) {\n\n                    // Create variable out of carted item\n                    let entry = cartObject[i]\n\n                    // For detail in carted item... (title, price, etc)\n                    for (var j = 0; j < entry.length; j++) {\n\n                        //  Create variable out of detail\n                        let detail = entry[j]\n\n                        // Pull cart details for injecting into HTML\n                        let entryTitle = detail[\"Title\"]\n                        let entryPrice = detail[\"Price\"]\n                        let entryImage = detail[\"Image\"]\n                        let entryAmount = detail[\"Amount\"]\n\n                        function createCartEntry() {\n\n                          // create overall container div for a cart entry\n                          let container = document.createElement(\"div\")\n                          container.classList.add(\"option\", \"cart-entry\")\n\n\n\n                          // PRIMARY CHILD DIV | shows image and title of item\n\n                              let faceplate = document.createElement(\"div\")\n                              faceplate.classList.add(\"faceplate\")\n\n                              // create + prepend image element\n                              let image = document.createElement(\"img\")\n                              $(image).attr('src', entryImage)\n                              faceplate.prepend(image)\n\n                              // create + append title element\n                              let titleH3 = document.createElement(\"h3\")\n                              let titleContent = document.createTextNode(entryTitle)\n                              titleH3.appendChild(titleContent)\n                              titleH3.classList.add(\"item-title\")\n                              faceplate.append(titleH3)\n\n                              // create + append dropdown arrow\n                              let arrow = document.createElement(\"i\")\n                              arrow.classList.add(\"fas\", \"fa-caret-down\")\n                              faceplate.append(arrow)\n\n\n\n                          // DROPDOWN CONTAINER\n\n                              // create droptions-container div, append to container\n                              let droptionsContainer = document.createElement(\"div\")\n                              droptionsContainer.classList.add(\"droptions-container\")\n                              container.append(droptionsContainer)\n\n\n\n                          // DROPDOWN CHILDREN | shows item info (price, quantity), link to item, button to remove item\n\n                              // create option/info divs: price, quantity, link to item, and remove button\n                              let outerPriceDiv = document.createElement(\"div\")\n                              let outerAmountDiv = document.createElement(\"div\")\n                              let outerRemoveDiv = document.createElement(\"div\")\n\n                              // add option class to each of the 4 divs created above\n                              outerPriceDiv.classList.add(\"option\")\n                              outerAmountDiv.classList.add(\"option\")\n                              outerRemoveDiv.classList.add(\"option\")\n\n                              // append each of the 4 divs to the droptions-container div\n                              droptionsContainer.append(outerPriceDiv)\n                              droptionsContainer.append(outerAmountDiv)\n                              droptionsContainer.append(outerRemoveDiv)\n\n\n\n                              // DROPDOWN CHILDREN CONTENTS\n\n                                  // create div for showing pricing\n                                  let innerPriceDiv = document.createElement(\"div\")\n                                  innerPriceDiv.classList.add(\"faceplate\", \"noclick\")\n                                  outerPriceDiv.appendChild(innerPriceDiv)\n\n                                      // create price label\n                                      let priceIndicator = document.createElement(\"h3\")\n                                      let priceIndicatorContent = document.createTextNode(\"Price\")\n                                      priceIndicator.appendChild(priceIndicatorContent)\n                                      innerPriceDiv.prepend(priceIndicator)\n\n                                      // create h3 with actual price value\n                                      let priceValue = document.createElement(\"h3\")\n                                      let priceValueContent = document.createTextNode(entryPrice)\n                                      priceValue.appendChild(priceValueContent)\n                                      innerPriceDiv.append(priceValue)\n\n                                  // create div for showing quantity in cart\n                                  let innerAmountDiv = document.createElement(\"div\")\n                                  innerAmountDiv.classList.add(\"faceplate\", \"noclick\")\n                                  outerAmountDiv.appendChild(innerAmountDiv)\n\n                                      // create quantity label\n                                      let amountIndicator = document.createElement(\"h3\")\n                                      let amountIndicatorContent = document.createTextNode(\"Quantity\")\n                                      amountIndicator.appendChild(amountIndicatorContent)\n                                      innerAmountDiv.prepend(amountIndicator)\n\n                                      // create h3 with actual price value\n                                      let amountValue = document.createElement(\"h3\")\n                                      let amountValueContent = document.createTextNode(entryAmount)\n                                      amountValue.appendChild(amountValueContent)\n                                      innerAmountDiv.append(amountValue)\n\n                                  // create div for removing item\n                                  let innerRemoveDiv = document.createElement(\"div\")\n                                  innerRemoveDiv.classList.add(\"faceplate\", \"red\")\n                                  outerRemoveDiv.appendChild(innerRemoveDiv)\n\n                                      // create removal \"button\"\n                                      let itemRemove = document.createElement(\"h3\")\n                                      let itemRemoveContent = document.createTextNode(\"Remove\")\n                                      itemRemove.appendChild(itemRemoveContent)\n                                      innerRemoveDiv.prepend(itemRemove)\n\n                                      let itemRemoveIcon = document.createElement(\"i\")\n                                      itemRemoveIcon.classList.add(\"fas\", \"fa-times\")\n                                      innerRemoveDiv.append(itemRemoveIcon)\n\n\n\n                          // Put the faceplate containing the image, text and arrow into container\n                          container.prepend(faceplate)\n\n                          // Put the container into the cart div for displaying on page\n                          cartDiv.append(container)\n\n                          $(container).click(function() {\n                              if ($(this).children('div.droptions-container').length != 0) {\n\n                                // find droptions-container child of option\n                                var slider = $(this).children(\".droptions-container\")\n\n                                // give display: visible to slider, done with sliding animation\n                                slider.slideToggle(200, function() {\n                                    slider.toggleClass(\"expanded\");\n                                })\n\n                                // if it is already open, give white background on click (once closed)\n                                if (slider.hasClass(\"expanded\")) {\n                                    this.style.backgroundColor = \"#ffffff\"\n\n                                // otherwise give it a grey background\n                                } else {\n                                    this.style.backgroundColor = \"#e8e8e8\"\n                                }\n                              } else {\n                                  return;\n                              }\n                          })\n\n                          $(\".option .red\").click(function() {\n\n                              let cartItemTitle = $(this).parent().parent().siblings(\".faceplate\").children(\"h3\").text()\n\n                              // Get cart contents form localStorage, convert to object\n                              let cart = localStorage.getItem(\"Cart\")\n                              let cartObject = JSON.parse(cart)\n\n                              for ( var product = 0; product < cartObject.length; product++ ) {\n                                  let individualItem = cartObject[product]\n                                  let itemIndex = cartObject.indexOf(individualItem)\n                                  console.log(itemIndex)\n                                  \n                                  for ( var feature = 0; feature < individualItem.length; feature++) {\n                                      let detail = individualItem[feature]\n                                      let title = detail[\"Title\"]\n\n                                      if (title === cartItemTitle) {\n                                        cartObject.splice(itemIndex, 1)\n                                        let cartString = JSON.stringify(cartObject)\n                                        localStorage.setItem(\"Cart\", cartString)\n                                        fillCart()\n                                      }\n\n                                  }\n                              }\n\n                          })\n\n                        }\n\n                        createCartEntry()\n                    }\n                }\n            }\n\n            // Add to cart (using Web Storage API)\n            $(\".add-to-cart-button\").click(function () {\n\n                function getQuantityValue() {\n                    return $(document).find(\".qty\").val()\n                };\n\n                // Get relevant item data\n                let itemTitle = $(this).closest(\".panel\").data(\"title\")\n                let itemPrice = $(this).closest(\".panel\").data(\"price\")\n                let itemImage = $(this).closest(\".panel\").data(\"image\")\n                let itemQuantity = getQuantityValue()\n\n                // Create Object out of item data\n                let cartEntry = [{\n                    \"Title\": itemTitle,\n                    \"Price\": itemPrice,\n                    \"Image\": itemImage,\n                    \"Amount\": itemQuantity\n                }]\n\n                // Fetch cart from localStorage, convert to object\n                let cart = localStorage.getItem(\"Cart\")\n                let cartObject = JSON.parse(cart)\n\n                cartObject.push(cartEntry)\n\n                // Convert cart back to string & send back to localStorage\n                let newCart = JSON.stringify(cartObject)\n                localStorage.setItem(\"Cart\", newCart)\n\n                fillCart()\n            })\n        });\n    }\n};\n\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Raleway|Montserrat\");\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n#thing {\n  margin-bottom: 100px;\n}\n\n@media (min-width: 0px) {\n  .carousel-wrapper {\n    width: 80vw;\n    margin: 0 auto;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 0px) {\n  .carousel-wrapper {\n    flex-direction: column;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .carousel-wrapper {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n}\n\n@media (min-width: 0px) {\n  .carousel-container {\n    box-sizing: border-box;\n    width: 100%;\n    height: 500px;\n    margin-bottom: 40px;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .carousel-container {\n    width: 150%;\n    height: 1000px;\n  }\n}\n\n@media (min-width: 0px) {\n  .slick-prev:before,\n  .slick-next:before {\n    color: #333;\n  }\n  .image-container {\n    outline: none;\n  }\n  .image-container img {\n    width: 100%;\n    height: 500px;\n    object-fit: contain;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .image-container {\n    height: 1000px;\n  }\n}\n\n@media (min-width: 0px) {\n  .panel-container {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .panel-container {\n    width: 30%;\n  }\n}\n\n@media (min-width: 0px) {\n  .panel {\n    z-index: 1;\n    min-width: 350px;\n    max-width: 350px;\n    padding: 0 20px;\n    background: #fff;\n    box-sizing: border-box;\n  }\n  .panel .product-name {\n    color: #333;\n    font-family: \"Raleway\";\n    font-size: 30px;\n    text-transform: uppercase;\n    text-align: center;\n    margin: 40px 0 -20px;\n  }\n  .panel .product-price {\n    color: #333;\n    font-family: \"Montserrat\";\n    font-size: 20px;\n    text-transform: uppercase;\n    text-align: center;\n    margin: 40px 0 -20px;\n  }\n  .colors,\n  .sizes,\n  .quantity,\n  .add-to-cart-container,\n  .social {\n    margin: 70px 0;\n    box-sizing: border-box;\n    display: grid;\n    justify-content: space-between;\n    column-gap: 20px;\n    row-gap: 20px;\n  }\n  .colors {\n    grid-template-columns: 50fr 50fr;\n  }\n  .sizes {\n    grid-template-columns: repeat(4, 20fr);\n  }\n  .colors h3,\n  .sizes h3 {\n    color: #333;\n    font-family: \"Montserrat\";\n    text-align: center;\n    min-width: 302px;\n    min-width: 302px;\n    /* border: solid red; */\n    padding: 0;\n    margin: 0;\n  }\n  .quantity {\n    grid-template-columns: 60px 100px 60px;\n  }\n  .add-to-cart-container {\n    grid-template-columns: 100%;\n  }\n  .button {\n    z-index: 3;\n    position: relative;\n    height: 60px;\n    min-width: 60px;\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none;\n    box-sizing: border-box;\n    border-radius: 5px;\n    font-family: \"Raleway\", sans-serif;\n    font-size: 15px;\n    text-transform: uppercase;\n    color: #333;\n    background: #e8e8e8;\n    transition: all 0.2s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  }\n  .button.selected {\n    background-color: #333;\n    color: #e8e8e8;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .button:hover {\n    background-color: #333;\n    color: #e8e8e8;\n  }\n}\n\n@media (min-width: 0px) {\n  .qty-button {\n    height: 60px;\n    width: 60px;\n    border: none;\n    outline: none;\n    border-radius: 50%;\n    box-sizing: border-box;\n    font-family: \"Raleway\", sans-serif;\n    text-transform: uppercase;\n    font-size: 40px;\n    line-height: 55px;\n    transition: all 0.1s;\n    background-color: #e8e8e8;\n    color: #333;\n    cursor: pointer;\n  }\n  .qty-button:active {\n    background-color: #333;\n    color: #fff;\n  }\n  .quantity input {\n    font-size: 25px;\n    color: #333;\n    text-align: center;\n    background-color: #fff;\n    border: 3px solid #e8e8e8;\n    border-radius: 5px;\n    padding: 5px 0 0 0;\n    -moz-appearance: textfield;\n  }\n  .button-red {\n    color: #ba6b6c;\n  }\n  .button-red.selected {\n    background: #ef9a9a;\n    color: #fff;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .button-red:hover {\n    background: #ef9a9a;\n    color: #fff;\n  }\n}\n\n@media (min-width: 0px) {\n  .button-green {\n    color: #75a478;\n  }\n  .button-green.selected {\n    background: #75a478;\n    color: #fff;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .button-green:hover {\n    background: #75a478;\n    color: #fff;\n  }\n}\n\n@media (min-width: 0px) {\n  .button-green:active {\n    background: #75a478;\n    color: #fff;\n  }\n  .button-black {\n    color: #333;\n  }\n  .button-black.selected {\n    background: #333;\n    color: #999;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .button-black:hover {\n    background: #333;\n    color: #999;\n  }\n}\n\n@media (min-width: 0px) {\n  .button-black:active {\n    background: #333;\n    color: #999;\n  }\n}\n\n@media (min-width: 0px) and (min-width: 1000px) {\n  .button-fieg:hover {\n    background: #90caf9;\n    color: #fff;\n  }\n}\n\n@media (min-width: 0px) {\n  .button-fieg:active {\n    background: 90caf9;\n    color: #fff;\n  }\n  .description-wrapper {\n    flex: 1;\n    max-width: 100%;\n    margin: 50px 0;\n    padding: 0 12%;\n    text-align: center;\n    color: #444;\n  }\n  .description-wrapper * {\n    margin: 20px 0;\n  }\n  .description-wrapper .description-header h1 {\n    font-family: \"Raleway\", sans-serif;\n    font-size: 200%;\n  }\n  .description-wrapper .description-body p {\n    font-family: \"Montserrat\";\n    font-size: 110%;\n    line-height: 150%;\n  }\n}\n\n@media (min-width: 568px) {\n  .carousel-container {\n    height: 300px;\n  }\n  .image-container img {\n    height: 300px;\n  }\n}\n\n@media (min-width: 750px) {\n  .carousel-container {\n    height: 400px;\n    width: 65%;\n  }\n  .image-container img {\n    height: 400px;\n    width: 100%;\n  }\n}\n\n@media (min-width: 801px) {\n  .carousel-container {\n    height: 70vh;\n    width: 50%;\n  }\n  .image-container img {\n    height: 70vh;\n  }\n}\n\n.slick-slider {\n  position: relative;\n  display: block;\n  box-sizing: border-box;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-touch-callout: none;\n  -khtml-user-select: none;\n  -ms-touch-action: pan-y;\n  touch-action: pan-y;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.slick-list {\n  position: relative;\n  display: block;\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\n\n.slick-list:focus {\n  outline: none;\n}\n\n.slick-list.dragging {\n  cursor: pointer;\n  cursor: hand;\n}\n\n.slick-slider .slick-track,\n.slick-slider .slick-list {\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n}\n\n.slick-track {\n  position: relative;\n  top: 0;\n  left: 0;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.slick-track:before,\n.slick-track:after {\n  display: table;\n  content: \"\";\n}\n\n.slick-track:after {\n  clear: both;\n}\n\n.slick-loading .slick-track {\n  visibility: hidden;\n}\n\n.slick-slide {\n  display: none;\n  float: left;\n  height: 100%;\n  min-height: 1px;\n}\n\n[dir=\"rtl\"] .slick-slide {\n  float: right;\n}\n\n.slick-slide img {\n  display: block;\n}\n\n.slick-slide.slick-loading img {\n  display: none;\n}\n\n.slick-slide.dragging img {\n  pointer-events: none;\n}\n\n.slick-initialized .slick-slide {\n  display: block;\n}\n\n.slick-loading .slick-slide {\n  visibility: hidden;\n}\n\n.slick-vertical .slick-slide {\n  display: block;\n  height: auto;\n  border: 1px solid transparent;\n}\n\n.slick-arrow.slick-hidden {\n  display: none;\n}\n</style>\n"],"sourceRoot":"src/components"}]}