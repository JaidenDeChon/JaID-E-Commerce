{"remainingRequest":"/home/jaiden/Code/JaID-Vue/node_modules/babel-loader/lib/index.js!/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jaiden/Code/JaID-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jaiden/Code/JaID-Vue/src/components/VueCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jaiden/Code/JaID-Vue/src/components/VueCard.vue","mtime":1544464893536},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1539307301811},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/babel-loader/lib/index.js","mtime":1541744734350},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/cache-loader/dist/cjs.js","mtime":1539307301811},{"path":"/home/jaiden/Code/JaID-Vue/node_modules/vue-loader/lib/index.js","mtime":1541744744501}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {};",{"version":3,"sources":["VueCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA,eAAA,EAAA","sourcesContent":["\n// To Do: \n//     only show so many \"other items in this category\" so as to not overload the page in the event of tons of items \n\n<template>\n  \n    <!-- If path is root... -->\n    <div  id=\"center-container\"\n          v-if=\"$route.path == '/'\" >\n\n        <div class=\"big\" id=\"cards-container\" >\n\n            <!-- ...For each category in the catelogue... -->\n            <div  class=\"card\"\n                  v-for=\"category in this.$store.state.catelogue.categories\" \n                  :key=\"category.name\" >\n\n                <!-- ...Create a card anchored to that category -->\n                <router-link :to=\"{ name: 'category', params: { categoryName: category.name } }\">\n\n                    <!-- Category's main image  -->\n                    <img v-bind:src=\"category.card\">\n\n                    <!-- Bottom part of card containing text -->\n                    <div class=\"text-container\">\n                        <p class=\"header\">{{ category.name }}</p>\n                        <p class=\"subtitle\">\n                            <div class=\"lower\">\n                                <i class=\"fa fa-tags\" aria-hidden=\"true\" ></i>\n                                {{ category.items.length }}\n                            </div>\n                        </p>\n                    </div>\n\n                </router-link>\n            </div>\n        </div>\n    </div>\n\n    <!-- Else if path is category... -->\n    <div  id=\"center-container\"\n          v-else-if=\"['category'].indexOf($route.name) > -1\" >\n\n        <div  class=\"big\" id=\"cards-container\" >\n\n            <!-- ...For the category which matches this route... -->\n            <template   v-for=\"category in this.$store.state.catelogue.categories\" \n                        v-if=\"category.name === $route.params.categoryName\" >\n\n                <!-- ...For each item in this category... -->\n                <div  class=\"card\"\n                      v-for=\"item in category.items\"\n                      :key=\"item.title\">\n\n                    <!-- ...Create a card anchored to that item -->\n                    <router-link :to=\"{ name: 'item', params: { categoryName: category.name, itemTitle: item.title } }\">\n\n                        <!-- Item's main image -->\n                        <img v-bind:src=\"item.mainImage\">\n\n                        <!-- Bottom part of card containing text -->\n                        <div class=\"text-container\">\n\n                            <p class=\"header\">{{ item.title }}</p>\n\n                            <p class=\"subtitle\">\n                                <div class=\"lower\">\n                                    <i class=\"fa fa-tags\" aria-hidden=\"true\" ></i>\n                                    {{ item.price }}\n                                </div>\n                            </p>\n\n                        </div>\n\n                    </router-link>\n                </div>\n            </template>\n        </div>\n    </div>\n\n    <!-- Else if path is item... -->\n    <div  id=\"center-container\"\n          v-else-if=\"['item'].indexOf($route.name) > -1\" >\n\n        <div  class=\"big\" id=\"cards-container\">\n\n            <!-- ...For the category which matches this route... -->\n            <template   v-for=\"category in this.$store.state.catelogue.categories\" \n                        v-if=\"category.name === $route.params.categoryName\" >\n\n                <!-- ...For each item in this category, if it's not the item currently being viewed... -->\n                <div  class=\"card\"\n                      v-for=\"item in category.items\" \n                      v-if=\"item.title != $route.params.itemTitle\"\n                      :key=\"item.title\" >\n\n                    <!-- ...Create a card anchored to that item -->\n                    <router-link :to=\"{ name: 'item', params: { categoryName: category.name, itemTitle: item.title } }\" >\n\n                        <!-- Item's main image -->\n                        <img v-bind:src=\"item.mainImage\">\n\n                        <!-- Bottom part of card containing text -->\n                        <div class=\"text-container\">\n\n                            <p class=\"header\">{{ item.title }}</p>\n\n                            <p class=\"subtitle\">\n                                <div class=\"lower\">\n                                    <i class=\"fa fa-tags\" aria-hidden=\"true\" ></i>\n                                    {{ item.price }}\n                                </div>\n                            </p>\n\n                        </div>\n\n                    </router-link>\n                </div>\n            </template>\n        </div>\n    </div>\n\n</template>\n\n\n<script>\nexport default {};\n</script>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css?family=Raleway\");\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n}\n\n#center-container {\n  width: 100vw;\n\n  margin: 20px 0 0 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#cards-container {\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 10px;\n  width: 90%;\n  margin: 0 auto;\n}\n\n#cards-container.big .card img {\n  min-height: 200px;\n}\n#cards-container .card {\n  box-sizing: border-box;\n  overflow: hidden;\n}\n#cards-container .card a {\n  margin: 0;\n  padding: 0;\n  display: block;\n  color: #333;\n  text-decoration: none;\n}\n#cards-container .card a:visited {\n  color: #333;\n}\n#cards-container .card * {\n  transition: all 0.4s;\n}\n#cards-container .card:hover > a > .text-container {\n  background-color: #e8e8e8;\n}\n#cards-container .card:hover > a > img {\n  border-radius: 10px 10px 0 0;\n}\n#cards-container .card img {\n  max-height: 150px;\n  object-fit: cover;\n  width: 100%;\n  border-radius: 10px;\n  margin: 0;\n  padding: 0;\n}\n#cards-container .card .text-container {\n  padding: 15px;\n  margin: -4px 0 0 0;\n  box-sizing: border-box;\n  border-radius: 0 0 10px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n#cards-container .card .text-container .lower {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n}\n#cards-container .card .text-container p {\n  margin: 7px;\n  color: #333;\n  font-family: \"Raleway\", sans-serif;\n  font-size: 15px;\n}\n#cards-container .card .text-container p.header {\n  text-transform: uppercase;\n}\n\n@media (min-width: 280px) {\n  #cards-container {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  #cards-container.big {\n    grid-template-columns: repeat(1, 1fr);\n  }\n}\n@media (min-width: 400px) {\n  #cards-container {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  #cards-container.big {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n@media (min-width: 568px) {\n  #cards-container {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  #cards-container.big {\n    /* margin: 10px; */\n    grid-gap: 10px;\n  }\n}\n@media (min-width: 750px) {\n  #cards-container.big {\n    /* margin: 15px; */\n    grid-gap: 15px;\n  }\n  #cards-container.big .card img {\n    max-height: 280px;\n    min-height: 280px;\n  }\n  #cards-container.big .card .text-container p {\n    font-size: 18px;\n  }\n}\n@media (min-width: 801px) {\n  #center-container {\n    margin: 40px 0 0 0;\n  }\n\n  #cards-container {\n    grid-template-columns: repeat(5, 1fr);\n  }\n}\n@media (min-width: 1000px) {\n  #cards-container {\n    grid-template-columns: repeat(5, 1fr);\n  }\n  #cards-container.big {\n    grid-template-columns: repeat(3, 1fr);\n    margin: 0 -20px;\n  }\n  #cards-container.big .card {\n    /* margin: 20px; */\n    grid-gap: 20px;\n  }\n  #cards-container.big .card img {\n    max-height: 300px;\n    min-height: 300px;\n  }\n}\n@media (min-width: 1400px) {\n  #cards-container.big {\n    margin: 0 -25px;\n  }\n\n  #cards-container.big {\n    /* margin: 25px 0; */\n    grid-gap: 50px;\n  }\n  #cards-container.big .card .text-container {\n    padding: 25px;\n  }\n}\n@media (min-width: 1920px) {\n  #cards-container.big .card .text-container {\n    padding: 32px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}